import { Forest } from '@wonderlandlabs/forest'

/*
formState will have the following structure:

{
  username: {fieldValue: string, error: string},
  password: {fieldValue: string, error: string},
  disabled: boolean
}

*/

export default () => {

  /**
   * this is a "fragment" that defines a configuration for any field child
   */
  const field = () => ({
    $value: { fieldValue: '' },
    actions: {
      update: (leaf, e) => {
        // the first property, leaf, is a self-refence to the context;
        // the root store in the forest, and each of it's children, are instances
        // of the Leaf class.

        leaf.do.set_fieldValue(e.target.value)
        // setters are autogenerated for each key field in the value
        // if the value is an Object or Map
        // in the form `set_{keyname}`
      }
    }
  })

  return new Forest({
    $value: { disabled: false },
    children: {
      username: field(),
      password: field()
    },
    actions: {
      submit: (leaf) => {
        console.log('sending ', leaf.value, 'to the server')
        const data = {
          username: leaf.value.username.fieldValue,
          password: leaf.value.password.fieldValue
        }
        leaf.do.set_disabled(true);
        return false;
        //@TODO: post data to a server
      }
    }
  })
}
